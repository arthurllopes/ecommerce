import type { GetServerSideProps, NextPage } from 'next'
import React from 'react'
import Head from 'next/head'
import Banner from '../components/Banner'
import { Header } from '../components/Header'
import FeaturingProductList from '../components/FeaturingProductsList'
import { useSession, signIn, signOut } from "next-auth/react"
import ProductCard from '../fragments/ProductCard'
import { useDispatch, useSelector } from 'react-redux'
import { RootState } from '../store/configureStore'
import { changeProducts, setAllProducts, setProductsShown } from '../store/Items'

type featuringProduct = {
  id: number,
  title: string,
  price: number,
  description: string,
  category: string,
  image: string,
  rating: {
    rate: number,
    count: number
  }
}
export type Props = {
  featuringProducts: featuringProduct[],
  categories: string[],
}
  

const Home = ({featuringProducts, categories}: Props) => {
  const [category, setCategory] = React.useState<string>('all')
  const dispatch = useDispatch()
  const { productsShown } = useSelector((state: RootState) => state.Items)
  React.useEffect(() => {
    dispatch(changeProducts(category))
  }, [category, dispatch])

  React.useEffect(() => {
    const getCategory = async () => {
      const categoryProducts = await fetch(`https://fakestoreapi.com/products`)
      .then(response => response.json())
      dispatch(setAllProducts(categoryProducts))
      dispatch(setProductsShown(categoryProducts))
    }
    getCategory()
  }, [dispatch])
  return (
    <div className="bg-gray-lightest">
      <Head>
        <title>Ecommerce</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className='max-w-screen-2xl mx-auto'> 
        <Banner />
        <FeaturingProductList featuringProducts={featuringProducts} />
      </main>
      <nav className='flex items-center justify-center space-x-4 mx-auto'>
        <div className={`${category === 'all' ? 'bg-blue-light' : 'bg-white'} rounded-2xl p-4 cursor-pointer`} onClick={() => setCategory('all')}>
          All Products
        </div>
        {categories.map(item => (
          <div key={item} className={`${category === item ? 'bg-blue-light' : 'bg-white'} rounded-2xl p-4 cursor-pointer`} onClick={() => setCategory(item)}>
            {item}
          </div>
        ))}
      </nav>
      <div className='z-50 mx-auto  grid grid-flow-row-dense sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4'>
            {productsShown?.map(item =>(
                <ProductCard key={item.id} product={item}/>
            ))}
      </div>
    </div>
  )
}

export default Home

export const getServerSideProps: GetServerSideProps = async (context) => {
  const featuringProducts = await fetch('https://fakestoreapi.com/products?limit=4')
  .then(response => response.json())

  const categories = await fetch(`https://fakestoreapi.com/products/categories`)
    .then(response => response.json())
  return {
    props: {
      featuringProducts,
      categories
    }
  }
}
